{"version":3,"sources":["logo.svg","components/TodoItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TodoItem","this","props","item","onClick","onClickRemove","className","classNames","isDone","icon","faCheckCircle","style","marginLeft","textAlign","flexGrow","title","faTimes","Component","propsTypes","PropTypes","shape","string","isRequired","bool","func","defaultProps","cookies","Cookies","App","changeOption","all","setState","option","set","path","expires","Date","now","active","completed","undefined","get","state","todoItems","onKeyUp","bind","selectAll","clearCompleted","inputElement","React","createRef","current","focus","event","items","index","indexOf","slice","splice","count","i","length","left","filter","keyCode","text","target","value","trim","faCheck","type","width","ref","placeholder","map","onClickItem","key","removeItem","float","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa28efe5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass TodoItem extends Component {\r\n    render(){\r\n        const { item, onClick, onClickRemove } = this.props,\r\n            className = classNames(\"TodoItem\", {\"TodoItem-isDone\": item.isDone});\r\n        return (\r\n            <div item={item} className={className}>\r\n                {\r\n                item.isDone === true && <span onClick={onClick} className=\"tick_done\"><FontAwesomeIcon icon={faCheckCircle} /></span>\r\n                }\r\n                {\r\n                item.isDone === false && <span onClick={onClick} className=\"tick\"><FontAwesomeIcon icon={faCheckCircle} /></span>\r\n                }\r\n                <span style={{marginLeft: '10px', textAlign: 'left', flexGrow: '1'}}>{item.title}</span>\r\n                <span onClick={onClickRemove} className=\"TodoItem-remove\"><FontAwesomeIcon icon={faTimes} /></span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoItem.propsTypes = {\r\n    item: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        isDone: PropTypes.bool.isRequired\r\n    }),\r\n    onClick: PropTypes.func.isRequired,\r\n    onClickRemove : PropTypes.func.isRequired,\r\n}\r\nTodoItem.defaultProps = {\r\n    title: \"Untitled\",\r\n    isDone: false\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport classNames from 'classnames';\n\nimport TodoItem from './components/TodoItem';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tif(cookies.get('option') === undefined){\n\t\t\tcookies.set('option', 0, { path: '/', expires: new Date(Date.now()+2592000) });\n\t\t}\n\t\tif(cookies.get('todoItems') === undefined){\n\t\t\tcookies.set('todoItems', [], { path: '/', expires: new Date(Date.now()+2592000) });\n\t\t}\n\t\tthis.state = {\n\t\t\toption: cookies.get('option'), //0: all, 1:active, 2: completed\n\t\t\ttodoItems: cookies.get('todoItems')\n\t\t};\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\n\t\tthis.selectAll = this.selectAll.bind(this);\n\t\tthis.clearCompleted = this.clearCompleted.bind(this);\n\n\t\tthis.inputElement = React.createRef();\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.inputElement.current.focus();\n\t}\n\n\tcomponentDidUpdate(){\n\t\tthis.inputElement.current.focus();\n\t}\n\n\tonClickItem(item){\n\t\treturn (event) => {\n\t\t\tlet isDone = item.isDone,\n\t\t\t\titems = this.state.todoItems,\n\t\t\t\tindex = this.state.todoItems.indexOf(item);\n\t\t\titems = [\n\t\t\t\t...items.slice(0, index),\n\t\t\t\t{...item, isDone: !isDone},\n\t\t\t\t...items.slice(index + 1)\n\t\t\t]\n\t\t\tthis.setState({\n\t\t\t\ttodoItems: items\n\t\t\t});\n\t\t\tcookies.set('todoItems', items, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t}\n\t}\n\tremoveItem(item){\n\t\treturn (event) => {\n\t\t\tlet items = this.state.todoItems,\n\t\t\t\tindex = items.indexOf(item);\n\t\t\titems = [\n\t\t\t\t...items.slice(0, index),\n\t\t\t\t...items.splice(index+1)\n\t\t\t]\n\t\t\tthis.setState({\n\t\t\t\ttodoItems: items\n\t\t\t});\n\t\t\tcookies.set('todoItems', items, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t}\n\t}\n\tleft(){\n\t\tlet items = this.state.todoItems,\n\t\t\tcount = 0; \n\t\tfor(let i=0; i<items.length; i++){\n\t\t\t!items[i].isDone && count++\n\t\t}\n\t\treturn count;\n\t}\n\tselectAll(){\n\t\tlet left = this.left(),\n\t\t\titems = this.state.todoItems;\n\t\tif(left){\n\t\t\tfor(let item of items) item.isDone = true;\n\t\t\tthis.setState({\n\t\t\t\ttodoItems: items\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tfor(let item of items) item.isDone = false;\n\t\t\tthis.setState({\n\t\t\t\ttodoItems: items\n\t\t\t})\n\t\t}\n\t\tcookies.set('todoItems', items, { path: '/', expires: new Date(Date.now()+2592000) })\n\t}\n\tclearCompleted(){\n\t\tlet items = this.state.todoItems.filter(item=> item.isDone === false);\n\t\tthis.setState({\n\t\t\ttodoItems: items\n\t\t})\n\t\tcookies.set('todoItems', items, { path: '/', expires: new Date(Date.now()+2592000) })\n\t}\n\tonKeyUp(event){\n\t\tif(event.keyCode === 13){\n\t\t\tlet text = event.target.value.trim();\n\t\t\tif(text){\n\t\t\t\tlet items = [\n\t\t\t\t\t{title: text, isDone: false},\n\t\t\t\t\t...this.state.todoItems\n\t\t\t\t];\n\t\t\t\tthis.setState({\n\t\t\t\t\ttodoItems: items\n\t\t\t\t});\n\t\t\t\tcookies.set('todoItems', items, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t\t\tevent.target.value = \"\";\n\t\t\t}\n\t\t}\n\t}\n\tchangeOption = {\n\t\tall: () => {\n\t\t\tthis.setState({option: '0'});\n\t\t\tcookies.set('option', 0, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t},\n\t\tactive: () => {\n\t\t\tthis.setState({option: '1'});\n\t\t\tcookies.set('option', 1, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t},\n\t\tcompleted: () => {\n\t\t\tthis.setState({option: '2'});\n\t\t\tcookies.set('option', 2, { path: '/', expires: new Date(Date.now()+2592000) })\n\t\t},\n\t}\n\trender(){\n\t\tlet items = [];\n\t\tswitch(this.state.option){\n\t\t\tcase '0': {\n\t\t\t\titems = this.state.todoItems;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '1': {\n\t\t\t\titems = this.state.todoItems.filter(item => item.isDone===false);\n\t\t\t\tbreak;\t\n\t\t\t}\n\t\t\tcase '2': {\n\t\t\t\titems = this.state.todoItems.filter(item => item.isDone===true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: cookies.set('option', 0, { path: '/', expires: new Date(Date.now()+2592000) });\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"TodoItems\">\n\t\t\t\t\t<div className=\"TodoItem header\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.left()>0 && <span onClick={this.selectAll}><FontAwesomeIcon icon={faCheck} className=\"tick\"/></span>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.left()===0 && <span onClick={this.selectAll}><FontAwesomeIcon icon={faCheck} className=\"tick_done\"/></span>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<input type=\"text\" style={{width: '100%'}} ref={this.inputElement} placeholder=\"What needs to be done?\" onKeyUp={this.onKeyUp}/>\n\t\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\titems.length>0 && items.map((item,index) =>\n\t\t\t\t\t\t<TodoItem onClick={this.onClickItem(item)} key={index} item={item} onClickRemove={this.removeItem(item)}/>)\n\t\t\t\t}\n\t\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t\t<span className=\"footer-item\" style={{float: 'left'}}>{this.left()} left</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<span onClick={this.changeOption.all} className={classNames(\"footer-item\", {\"footer-item-active\": this.state.option === '0'})}>All</span>\n\t\t\t\t\t\t\t<span onClick={this.changeOption.active} className={classNames(\"footer-item\", {\"footer-item-active\": this.state.option === '1'})}>Active</span>\n\t\t\t\t\t\t\t<span onClick={this.changeOption.completed} className={classNames(\"footer-item\", {\"footer-item-active\": this.state.option === '2'})}>Completed</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span onClick={this.clearCompleted} className={classNames(\"footer-item\", {\"footer-item-hidden\": this.left()===this.state.todoItems.length})} style={{float: 'right'}}>Clear completed </span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}